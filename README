This is C-Kermit for Windows. For more information on Kermit, visit the
Kermit Project website: http://www.kermitproject.org.

Currently the following features are disabled due to their use of obsolete
or proprietary libraries:
  - SSH
  - Kerberos
  - SRP
  - OpenSSL
  - X, Y and Z Modem
  - DECnet
  - LAT

To build C-Kermit for Windows you will need a C++ compiler. The following ones
are currently supported:
  - Microsoft Visual C++ 6.0 Service Pack 6
  - Microsoft Visual C++ .net 2002 (7.0)
  - Microsoft Visual C++ .net 2003 (7.1)
  - Microsoft Visual C++ 2005 (8.0)
  - Microsoft Visual C++ 2010 (10.0) Service Pack 1
  - Microsoft Visual C++ 2012 (11.0)
Visual C++ 2008 and 2013 probably work but this is untested

Once everything is in place, edit /setenv.bat to point to your source
directory. Then:
 1. Open up a console window
 2. Setup the Visual C++ environment. You'll want to run vcvars32.bat. This
    will be where ever you installed your compiler. For example:
       C:\Program Files\Microsoft Visual Studio 8\VC\bin\vcvars32.bat
 3. CD into your source directory and run the following:
      setenv.bat
      cd kermit/k95
      mknt.bat
      mkg.bat
This should leave you with a bunch of binaries in your current directory, the
most interesting being:
  cknker.exe   - Console version of C-Kermit for Windows
  k95g.exe     - Graphical version of C-Kermit for Windows

Future stuff to do:
  * Remove need for /noBool switch and #defines in kui code.
  * Strip out all licensing code
  * Remove all Kermit 95 branding
  * Restore use of fsetpos in ckofio.c (see line 5412)
  * Turn long long support back on (remove -DNOLONGLONG in makefile)
  * Re-enable/rewrite features that were disabled to get it building such as:
    - SSH
    - Kerberos
    - zlib
    - OpenSSL
    - SRP
    - Z/Y/Z Modem
    This will require upgrading to current versions of the libraries.